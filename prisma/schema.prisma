// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL_NO_SSL")
}

model Product {
  id            Int           @id @default(autoincrement())
  title         String
  image         String
  price         Float
  description   String
  description2  String
  procedure     String
  subCategoryId Int
  category      SubCategory   @relation(fields: [subCategoryId], references: [id])
  OrderDetail   OrderDetail[]
}

model SubCategory {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Customer {
  id      Int     @id @default(autoincrement())
  name    String
  phone   String  @unique
  address String
  orders  Order[] @relation("CustomerOrders")
  cart    Cart?
}

model Cart {
  id           Int           @id @default(autoincrement())
  customerId   Int           @unique
  customer     Customer      @relation(fields: [customerId], references: [id])
  orderDetails OrderDetail[]  
}

model Order {
  id           Int           @id @default(autoincrement())
  time         DateTime
  customerId   Int
  customer     Customer      @relation("CustomerOrders", fields: [customerId], references: [id])
  orderDetails OrderDetail[]
  payment      Payment?
  delivery     Delivery?
}

model OrderDetail {
  id        Int     @id @default(autoincrement())
  orderId   Int?
  order     Order?  @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  qty       Int
  Cart      Cart?   @relation(fields: [cartId], references: [id])
  cartId    Int?
}

model Payment {
  id       Int   @id @default(autoincrement())
  netPrice Float
  cashPaid Float
  orderId  Int   @unique
  order    Order @relation(fields: [orderId], references: [id])
}

model Delivery {
  id           Int      @id @default(autoincrement())
  departure    DateTime
  arrival      DateTime
  departureBoy String
  orderId      Int      @unique
  order        Order    @relation(fields: [orderId], references: [id])
}
